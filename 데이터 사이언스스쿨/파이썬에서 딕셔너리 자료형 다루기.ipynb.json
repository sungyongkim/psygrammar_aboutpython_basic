{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "ba5a74cdff094abb903bf05e1e61201a"
   },
   "source": [
    "# 파이썬에서 딕셔너리 자료형 다루기"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "cd233f4922a04ee1b26f18f3d1373acf"
   },
   "source": [
    "## 자료의 갯수"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "b6dd9d27bdc843eab6d939d9da0f9add"
   },
   "source": [
    "리스트 자료형과 마찬가지로 딕셔너리 자료형의 원소의 갯수도 `len` 명령으로 구할 수 있다.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": true,
    "school_cell_uuid": "3ae7e1570f5e44879152280609cccbd7"
   },
   "outputs": [],
   "source": [
    "x = {\"a\": 10, \"b\":20}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "school_cell_uuid": "9b67174d7f0143a2a4cfeac51664727e"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(x)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "326be81210614b08bcea8ae05fd7b1d2"
   },
   "source": [
    "## 자료의 갱신, 추가, 삭제"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "72493baac7174c5fbd33fb1f0e5d4038"
   },
   "source": [
    "딕셔너리 자료에서 특정한 키 값을 다른 값으로 바꾸려면 인덱싱 결과에 바꾸고자 하는 값을 대입한다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "school_cell_uuid": "31da78e2244f4f78a3e057d0329b947d"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x[\"a\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": true,
    "school_cell_uuid": "1a3cf8bfcad44958bd0e5a2698f84572"
   },
   "outputs": [],
   "source": [
    "x[\"a\"] = 30"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "school_cell_uuid": "5a003e83ffcf4f64b4d21603a83fe58e"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'a': 30, 'b': 20}"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "eaaec12f60db4b68b487208f9024acd2"
   },
   "source": [
    "딕셔너리 자료에 새로운 키와 이에 대응하는 값을 추가하려면 현재는 자료 갱신과 마찬가지로 인덱싱 결과에 값을 대입한다. 다만 이 경우에는 현재 존재하지 않는 키를 인덱스로 사용한다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": true,
    "school_cell_uuid": "832e627f440a4b6f91f4b6439a7de26c"
   },
   "outputs": [],
   "source": [
    "x[\"c\"] = 40"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "school_cell_uuid": "58a83debd783422eb984dbbb0fd92d27"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'a': 30, 'b': 20, 'c': 40}"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "e1727879c52c4c02b452d06a46538627"
   },
   "source": [
    "특정한 키와 이에 해당하는 값을 없애려면 `del` 명령을 사용한다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": true,
    "school_cell_uuid": "fbc9db5d3a604e0cad25ea98bee7d95d"
   },
   "outputs": [],
   "source": [
    "del x[\"b\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "school_cell_uuid": "2044f3b7e6f340f093577a9ffbbd4c7c"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'a': 30, 'c': 40}"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "845f963611be4f28959a13a4385df4ad"
   },
   "source": [
    "## 키 확인"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "b7d782f6e536484894d64d117aefdc5a"
   },
   "source": [
    "딕셔너리 자료에 특정한 키가 있는지 없는지 알기 위해서는 `in` 명령을 사용한다. 만약 해당 키가 존재하면 `True`를, 존재하지 않으면 `False`를 반환한다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "school_cell_uuid": "431848c8029843d4a7f10d6f12593df6"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\"a\" in x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "school_cell_uuid": "44d0e5296829469abb37d666aa2d62f8"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\"d\" in x"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "393395c6f697469fb763d25e25f5623c"
   },
   "source": [
    "## 딕셔너리 자료형의 반복"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "e41ab06e56c147f197b1575deffa0930"
   },
   "source": [
    "리스트 자료형처럼 딕셔너리 자료형에 있는 데이터도 `for` 반복문에 넣을 수 있다. 이 때 **딕셔너리 자료형은 내부적으로 자료의 순서를 보장하지 않으므로** 특정한 순서로 반복될 것을 기대하면 안된다는 점에 주의한다."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "70ae6cce3e22449a89a5a49648358085"
   },
   "source": [
    "`for` 반복문에서 딕셔너리 자료형을 사용하는 방법에는 다음 세가지가 있다.\n",
    "\n",
    "1. 키만 반복하는 경우\n",
    "2. 값만 반복하는 경우\n",
    "3. 키와 값 쌍을 반복하는 경우"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "c2c60a2b838f41348af9410a9f153c9f"
   },
   "source": [
    "### 딕셔너리 자료형의 키 반복"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "f3eb6923af7f44d79ee98944ad579963"
   },
   "source": [
    "딕셔너리 자료의 키를 반복시키려면 리스트와 마찬가지로 `for` 반복문의 `in` 다음에 딕셔너리 자료형 변수를 넣으면 된다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "school_cell_uuid": "bf0cd56615b640f4ae2afe4d99e999bd"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "a\n",
      "c\n"
     ]
    }
   ],
   "source": [
    "for k in x:\n",
    "    print(k)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "9810078131da4ed386c4b651fe03fa58"
   },
   "source": [
    "`keys()` 메서드는 딕셔너리 자료의 키 목록을 리스트로 반환하므로 반복문에 이를 사용할 수도 있다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "school_cell_uuid": "952098e8331347428b164c6183ce40de"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['a', 'c']"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x.keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "school_cell_uuid": "e57bac0272c4474fb4a0ffb700938c86"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "a\n",
      "c\n"
     ]
    }
   ],
   "source": [
    "for k in x.keys():\n",
    "    print(k)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "90963f7061da4cf4aa75eef1d9c969fa"
   },
   "source": [
    "### 딕셔너리 자료형의 값 반복"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "ebddbda498ac473e9e5b85a18c650728"
   },
   "source": [
    "딕셔너리 자료의 키를 반복시키려면 딕셔너리 자료의 값 목록을 리스트로 반환하는 `values()` 메서드를 사용한다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "school_cell_uuid": "a6b7e22feb4042898221d1043cd7019f"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[30, 40]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x.values()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "school_cell_uuid": "ed5fae30540e42f389b9f5e2c30f1f45"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "30\n",
      "40\n"
     ]
    }
   ],
   "source": [
    "for v in x.values():\n",
    "    print(v)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "1ed918ac02b246609d9f385689ee42a9"
   },
   "source": [
    "### 딕셔너리 자료형의 키와 값의 쌍 반복"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "48a31ad8e06c4a5e8f3c4a88f00a8e82"
   },
   "source": [
    "딕셔너리 자료의 키와 값을 쌍으로 하여 반복시키려면 `items()` 메서드를 사용한다. 이 때 `for` 다음의 임시 변수를 다음과 같이 두 개 지정해야 한다. 첫번째 임시 변수에는 키가, 두번째 임시 변수에는 값이 들어가게 된다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "school_cell_uuid": "cd0c674845c6465d9d97e0f0f5d72a81"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "key [a] => value [30]\n",
      "key [c] => value [40]\n"
     ]
    }
   ],
   "source": [
    "for k, v in x.items():\n",
    "    print(\"key [%s] => value [%d]\" % (k, v))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}