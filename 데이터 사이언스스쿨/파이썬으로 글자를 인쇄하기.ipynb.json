{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "97fb81f7a64e434cabbbcc764c35c018"
   },
   "source": [
    "# 파이썬으로 글자를 인쇄하기"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "945d1700bb1446bbb4faab955ad80bb6"
   },
   "source": [
    "파이썬에서 글자를 만들려면 따옴표를 사용한다. 따옴표에는 큰 따옴표(<kdb>\"</kdb>)와 작은 따옴표(<kdb>'</kdb>)가 있으며 어떤것을 사용해도 된다. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "7a06bc6b2af64d88a3f7fb537fce099c"
   },
   "source": [
    "글자를 인쇄하려면 `print()` 명령을 사용한다."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "3e7d8411f8e345058e0a05ed458891f8"
   },
   "source": [
    "만약 파이썬 버전 2를 사용하고 있다면 `print()` 명령을 사용하기 전에 다음 명령을 입력한다. 이 명령은 파이썬 버전 3의 `print()` 명령을 버전 2에서도 사용할 수 있도록 한다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true,
    "school_cell_uuid": "5716a0f5e4bd4e5187c4a7d045be845b"
   },
   "outputs": [],
   "source": [
    "from __future__ import print_function"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "99ccd77dd6804f8f9e2900938f2945ad"
   },
   "source": [
    "파이썬과 같은 프로그래밍 언어에서는 글자를 **문자열**이라고 부른다. 영어로는 **string** 이다. 원하는 대로 문자열을 인쇄해 보자."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false,
    "school_cell_uuid": "7511db9490d3419897606e05e4c2d273"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello\n"
     ]
    }
   ],
   "source": [
    "print(\"Hello\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false,
    "school_cell_uuid": "6eea509061674b23ab83fd573ccdc1d0"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Good day!\n"
     ]
    }
   ],
   "source": [
    "print('Good day!')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false,
    "school_cell_uuid": "f516b609a2be44b5be97df6c3957397c"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "한글도 쓸 수 있어요.\n"
     ]
    }
   ],
   "source": [
    "print(\"한글도 쓸 수 있어요.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "5131af466aa04b509c02e562f6d1581c"
   },
   "source": [
    "## 문자열 연산"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "29219218b1544c11b15ceb4e1fa863b8"
   },
   "source": [
    "문자열도 숫자처럼 덧셈과 곱셈 연산을 할 수 있다. 덧셈 연산은 두 문자열을 붙이고 곱셈 연산은 문자열을 반복한다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false,
    "school_cell_uuid": "90fc749b938d40279221e19534779e85"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello, World!\n"
     ]
    }
   ],
   "source": [
    "print(\"Hello, \" + \"World!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false,
    "school_cell_uuid": "09e43390e5084966b7cffa27ac3dc57d"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "내 이름은 홍길동입니다.\n"
     ]
    }
   ],
   "source": [
    "print(\"내 이름은 \" + \"홍길동\" + \"입니다.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false,
    "school_cell_uuid": "0b13bc10b31b4faaafccac95bfe4f682"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "**********\n"
     ]
    }
   ],
   "source": [
    "print(\"*\" * 10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "d981cb4a1767487796df4f5f5e63fc50"
   },
   "source": [
    "## 숫자를 문자열로 바꾸기"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "f148f70b46a2487298c69fc1b46b5a9e"
   },
   "source": [
    "숫자를 문자열과 더하려면 우선 더하려는 숫자를 문자열로 바꾸어야 한다. 숫자를 문자열로 바꾸려면 `str()` 명령을 사용한다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false,
    "school_cell_uuid": "dcd4c1c3f7a0411181fa441706a9bea8"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'7'"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "str(7)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false,
    "school_cell_uuid": "3a4c7c4c693b4077a7b538170685f31d"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "별표를 10번 인쇄합니다.\n",
      "**********\n"
     ]
    }
   ],
   "source": [
    "n = 10\n",
    "print(\"별표를 \" + str(n) + \"번 인쇄합니다.\")\n",
    "print(\"*\" * n)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "4d2f11c915dd4242b418f0ffe080f4d1"
   },
   "source": [
    "## 한 줄 띄우기"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "b37783996dbb4d22bf9d4629d74ef3ff"
   },
   "source": [
    "`print()` 명령을 한 번 쓸때마다 한 줄씩 인쇄를 한다. 다시 `print()` 명령을 쓰면 그 다음 줄에 인쇄한다. \n",
    "\n",
    "하지만 만약 `print()` 명령을 한 번 쓰면서 여러 줄에 걸쳐 인쇄를 하고 싶으면 문자열에 \"다음 줄 넘기기 기호\"를 넣어야 한다.\n",
    "\n",
    "다음 줄 넘기기는 영어로 line feed 라고 하며 `\"\\n\"` 라는 글자로 나타낸다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false,
    "school_cell_uuid": "420b10e931c441a6a731c3c88b94a1f5"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "한 줄 쓰고\n",
      "그 다음 줄을 쓴다.\n"
     ]
    }
   ],
   "source": [
    "print(\"한 줄 쓰고\\n그 다음 줄을 쓴다.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "d5918e5631ce4c3f9b0fc197ea3401d6"
   },
   "source": [
    "## 줄을 바꾸지 않고 이어서 인쇄하기"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "d3822fa4f5f14f97ba97d34de8a93e19"
   },
   "source": [
    "반대로 `print()` 명령을 여러번 쓰면서 줄은 바꾸지 않고 싶다면 다음과 같이 `print()` 명령에 `end`라는 인수를 추가한다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false,
    "school_cell_uuid": "e74c4dd33690487883f66455f2a16a4f"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "한 줄 쓰고 이어서 쓴다.\n"
     ]
    }
   ],
   "source": [
    "print(\"한 줄 쓰고 \", end=\"\")\n",
    "print(\"이어서 쓴다.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "6351193e043d4a949cf854975c6b2680"
   },
   "source": [
    "## 문자열 값을 가지는 변수"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "8375165e79d94097b5c584a8ad238cf7"
   },
   "source": [
    "변수에는 숫자뿐만 아니라 문자열도 넣을 수 있다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false,
    "school_cell_uuid": "9fba4ac5f0db421ea0ec688f73c90640"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "내 이름은 홍길동입니다.\n"
     ]
    }
   ],
   "source": [
    "name = \"홍길동\"\n",
    "print(\"내 이름은 \" + name + \"입니다.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": false,
    "school_cell_uuid": "8a69d4e67faa4bbeaf3ca2b38d7696ed"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "$ 기호를 20번 인쇄합니다.\n",
      "$$$$$$$$$$$$$$$$$$$$\n"
     ]
    }
   ],
   "source": [
    "mark = \"$\"\n",
    "n = 20\n",
    "print(mark + \" 기호를 \" + str(n) + \"번 인쇄합니다.\")\n",
    "print(mark * n)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "3476188bd3f3408b9fb06efd55e0f2bd"
   },
   "source": [
    "## 따옴표를 인쇄하기"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "aa101b9a61e54fa18dcc58616269debb"
   },
   "source": [
    "파이썬에서 두 가지 종류의 다른 따옴표를 쓸 수 있는 이유는 문자열 안에 따옴표가 들어가는 경우가 있기 때문이다.\n",
    "만약 따옴표로 둘러싸인 문자열에 따옴표가 포함되어 있다면 파이썬은 그 부분에서 문자열이 끝난다고 인식하기 때문에 오류가 발생한다.\n",
    "\n",
    "이렇게 문자열 안에 큰 따옴표가 있어야 하는 경우에는 전체 문자열을 작은 따옴표로 둘러싸면 된다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": false,
    "school_cell_uuid": "98798f24a45f435c9db884ad32307c12"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "둘리가 \"호이!\"하고 말했어요.\n"
     ]
    }
   ],
   "source": [
    "print('둘리가 \"호이!\"하고 말했어요.')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "4b3e6b3fde174cd5a8be5dd581d337de"
   },
   "source": [
    "반대로 문자열 안에 작은 따옴표가 있어야 하는 경우에는 전체 문자열을 큰 따옴표로 둘러싼다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": false,
    "school_cell_uuid": "5d4090f6c25f415da5bc80a02c946e72"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "둘리가 '이제 어디로 가지?'하고 생각했어요.\n"
     ]
    }
   ],
   "source": [
    "print(\"둘리가 '이제 어디로 가지?'하고 생각했어요.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "bootstrap": {
     "panel": {
      "class": "panel-default"
     }
    },
    "school_cell_uuid": "ba0a634066f64c4684f95536073a10b1"
   },
   "source": [
    "#### 연습 문제 1\n",
    "\n",
    "1. 다음 문장을 인쇄해 본다.\n",
    "```\n",
    "Beautiful is better than ugly.\n",
    "Explicit is better than implicit.\n",
    "Simple is better than complex.\n",
    "Complex is better than complicated.\n",
    "Flat is better than nested.\n",
    "Sparse is better than dense.\n",
    "```\n",
    "\n",
    "2. 문자열 변수 하나, 정수형 변수 하나 그리고 문자열의 덧셈과 곱셈 연산을 사용하여 다음 문자열을 인쇄한다.\n",
    "```\n",
    "@@@@@@\n",
    "@    @\n",
    "@    @\n",
    "@    @\n",
    "@@@@@@\n",
    "```"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [Root]",
   "language": "python",
   "name": "Python [Root]"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}